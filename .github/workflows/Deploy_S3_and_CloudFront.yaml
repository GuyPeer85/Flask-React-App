name: Deploy to S3 and CloudFront
on:
  push:
    branches:
      - aws
    paths:
      - 'client/**'
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      BUCKET: alex-home-hands-on 
      REGION: us-east-1
      TF_WORKSPACE: default
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.9

    - name: Check ALB DNS Name output and update .env
      working-directory: terraform
      run: |
        ALB_DNS_NAME=$(terraform output -raw flask_react_app_alb_dns)
        echo "REACT_APP_ALB_DNS_NAME=$ALB_DNS_NAME" >> ${{ env.DIST }}/.env

    - name: Build Docker image and copy build directory
      run: |
        cd ${{ env.DIST }}
        docker build --target=builder -t my-app .
        id=$(docker create my-app)
        docker cp $id:/app/build .

    - name: Copy files to the S3 bucket with the AWS CLI
      run: |
        aws s3 sync build/ s3://${{ env.BUCKET }}/ --delete

    - name: Invalidate CloudFront cache
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ env.DIST_ID }} \
          --paths "/*"
