name: Deploy to AWS

on:
  push:
    branches:
      - aws
    paths:
      - 'server/Dockerfile'
      - 'server/app.py'
  pull_request:
    branches:
      - aws
    paths:
      - 'server/Dockerfile'
      - 'server/app.py'
  workflow_dispatch:
    branches:
      - aws
    paths:
      - 'server/Dockerfile'
      - 'server/app.py'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Configure Terraform
        run: |
          echo "aws_access_key = \"AKIA4LD7OFQOTO5ZFSEU\"" > terraform/terraform.tfvars
          echo "aws_secret_access_key = \"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\"" >> terraform/terraform.tfvars

      - name: Terraform Plan
        working-directory: terraform
        run: |
          terraform init
          terraform plan

      - name: Terraform Apply for ECR
        working-directory: terraform
        run: terraform apply -auto-approve -target=aws_ecr_repository.flask_react_app_repo_ecr

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: 848523308061.dkr.ecr.us-east-1.amazonaws.com/flask-react-app-repo-ecr
          region: us-east-1
        env:
          TERRAFORM_CLI_PATH: /home/runner/work/_temp/40094850-0c19-468c-a023-49736052691c

      - name: Build and Push Docker image
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: flask-react-app-repo-ecr
          IMAGE_TAG: latest
        run: |
          cd server
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Terraform Apply for remaining resources
        working-directory: terraform
        run: terraform apply -auto-approve
